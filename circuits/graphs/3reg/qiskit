
#Initial Hadamards
circuit.h(qr)

##Starting iteration p = 1
#First CNOT for edge 1
circuit.cx(qr[0],qr[1])

#Z-rotation approximation
circuit.s(qr[1])
circuit.h(qr[1])
circuit.s(qr[1])
circuit.t(qr[1])
circuit.h(qr[1])
circuit.t(qr[1])
circuit.h(qr[1])
circuit.s(qr[1])
circuit.t(qr[1])
circuit.h(qr[1])
circuit.t(qr[1])
circuit.h(qr[1])
circuit.s(qr[1])
circuit.t(qr[1])
circuit.h(qr[1])
circuit.s(qr[1])
circuit.t(qr[1])
circuit.h(qr[1])
circuit.s(qr[1])
circuit.t(qr[1])
circuit.h(qr[1])
circuit.t(qr[1])
circuit.h(qr[1])
circuit.s(qr[1])
#Second CNOT for edge 1
circuit.cx(qr[0],qr[1])

#First CNOT for edge 2
circuit.cx(qr[0],qr[2])

#Z-rotation approximation
circuit.s(qr[2])
circuit.h(qr[2])
circuit.s(qr[2])
circuit.t(qr[2])
circuit.h(qr[2])
circuit.t(qr[2])
circuit.h(qr[2])
circuit.s(qr[2])
circuit.t(qr[2])
circuit.h(qr[2])
circuit.t(qr[2])
circuit.h(qr[2])
circuit.s(qr[2])
circuit.t(qr[2])
circuit.h(qr[2])
circuit.s(qr[2])
circuit.t(qr[2])
circuit.h(qr[2])
circuit.s(qr[2])
circuit.t(qr[2])
circuit.h(qr[2])
circuit.t(qr[2])
circuit.h(qr[2])
circuit.s(qr[2])
#Second CNOT for edge 2
circuit.cx(qr[0],qr[2])

#First CNOT for edge 3
circuit.cx(qr[0],qr[6])

#Z-rotation approximation
circuit.s(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
#Second CNOT for edge 3
circuit.cx(qr[0],qr[6])

#First CNOT for edge 4
circuit.cx(qr[1],qr[3])

#Z-rotation approximation
circuit.s(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
#Second CNOT for edge 4
circuit.cx(qr[1],qr[3])

#First CNOT for edge 5
circuit.cx(qr[1],qr[7])

#Z-rotation approximation
circuit.s(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
#Second CNOT for edge 5
circuit.cx(qr[1],qr[7])

#First CNOT for edge 6
circuit.cx(qr[2],qr[3])

#Z-rotation approximation
circuit.s(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.t(qr[3])
circuit.h(qr[3])
circuit.s(qr[3])
#Second CNOT for edge 6
circuit.cx(qr[2],qr[3])

#First CNOT for edge 7
circuit.cx(qr[2],qr[4])

#Z-rotation approximation
circuit.s(qr[4])
circuit.h(qr[4])
circuit.s(qr[4])
circuit.t(qr[4])
circuit.h(qr[4])
circuit.t(qr[4])
circuit.h(qr[4])
circuit.s(qr[4])
circuit.t(qr[4])
circuit.h(qr[4])
circuit.t(qr[4])
circuit.h(qr[4])
circuit.s(qr[4])
circuit.t(qr[4])
circuit.h(qr[4])
circuit.s(qr[4])
circuit.t(qr[4])
circuit.h(qr[4])
circuit.s(qr[4])
circuit.t(qr[4])
circuit.h(qr[4])
circuit.t(qr[4])
circuit.h(qr[4])
circuit.s(qr[4])
#Second CNOT for edge 7
circuit.cx(qr[2],qr[4])

#First CNOT for edge 8
circuit.cx(qr[3],qr[5])

#Z-rotation approximation
circuit.s(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
#Second CNOT for edge 8
circuit.cx(qr[3],qr[5])

#First CNOT for edge 9
circuit.cx(qr[4],qr[5])

#Z-rotation approximation
circuit.s(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.t(qr[5])
circuit.h(qr[5])
circuit.s(qr[5])
#Second CNOT for edge 9
circuit.cx(qr[4],qr[5])

#First CNOT for edge 10
circuit.cx(qr[4],qr[6])

#Z-rotation approximation
circuit.s(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.t(qr[6])
circuit.h(qr[6])
circuit.s(qr[6])
#Second CNOT for edge 10
circuit.cx(qr[4],qr[6])

#First CNOT for edge 11
circuit.cx(qr[5],qr[7])

#Z-rotation approximation
circuit.s(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
#Second CNOT for edge 11
circuit.cx(qr[5],qr[7])

#First CNOT for edge 12
circuit.cx(qr[6],qr[7])

#Z-rotation approximation
circuit.s(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.t(qr[7])
circuit.h(qr[7])
circuit.s(qr[7])
#Second CNOT for edge 12
circuit.cx(qr[6],qr[7])

#Hadamards to set up single X-rotations
circuit.h(qr)

#Rz (effectively Rx) approximations
circuit.s(qr)
circuit.h(qr)
circuit.s(qr)
circuit.t(qr)
circuit.h(qr)
circuit.t(qr)
circuit.h(qr)
circuit.s(qr)
circuit.t(qr)
circuit.h(qr)
circuit.t(qr)
circuit.h(qr)
circuit.s(qr)
circuit.t(qr)
circuit.h(qr)
circuit.s(qr)
circuit.t(qr)
circuit.h(qr)
circuit.s(qr)
circuit.t(qr)
circuit.h(qr)
circuit.t(qr)
circuit.h(qr)
circuit.s(qr)

#Hadamards to set down single X-rotations
circuit.h(qr)

#Measure
circuit.measure(qr,cr)
